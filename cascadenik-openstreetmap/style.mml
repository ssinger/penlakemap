<?xml version="1.0" encoding="utf-8"?>

<!-- To get running switch the entitites below to fit your environment, and then search and replace the table names planet_osm_polygon, planet_osm_line, and planet_osm_point to fit your osm database table names -->

<!DOCTYPE Map[

    <!-- coastline shapefile settings -->
<!--
    <!ENTITY coastlines "../../../../../../src/osm_mapnik3/world_boundaries/processed_p">
    <!ENTITY coastlines_srs "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
-->
    
    <!-- osm2pgsql defaults to importing OSM data in mercator projection (+proj=merc) -->
    <!-- this is also the projection the map should be in for serving tiles in the standard way -->
    
    <!ENTITY map_srs "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    

    <!-- if you imported data using osm2pgsql in lon/lat then uncomment this next line and comment out the mercator line -->
    <!ENTITY osm_srs "+proj=latlong +ellps=WGS84 +datum=WGS84 +no_defs">
    <!--<!ENTITY osm_srs "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">-->
    
    <!ENTITY utm17n_srs "+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs">

    <!-- if estimate_extent is false then we manually set the bounds for our data -->
    <!ENTITY estimate_extent "false">
    <!-- extent in spherical mercator of OSM data (+proj=merc...)-->
    <!--<!ENTITY extent "-20037508,-19929239,20037508,19929239">-->
    <!-- Full global extent in spherical mercator (+proj=merc...)-->
    <!-- <!ENTITY extent "-20037508.34,-20037508.34,20037508.34,20037508.34">-->
    <!-- global extent in lon lat (uncomment if your data was imported in lon/lat-->
    <!ENTITY extent "-180,-89.9,180,89.9">

    <!-- database settings -->
    <!ENTITY host "/home/ssinger/penlakemap/">
    <!ENTITY port "5432">
    <!ENTITY user "ssinger">
    <!ENTITY password "">
    <!ENTITY dbname "penlakemap">
]>
<Map srs="&map_srs;">
    <Stylesheet>

        Map { map-bgcolor: #ffffff; }
    </Stylesheet>

    <Stylesheet src="ground.mss"/>
    <Stylesheet src="roads.mss"/> 
    <Stylesheet src="paths.mss"/>
    <Stylesheet src="rail.mss"/>
    <Stylesheet src="places.mss"/>


    <Layer class="citylike nonparking area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT *
                 FROM planet_osm_polygon
                 WHERE building IS NULL
                   AND (amenity IN ('school', 'college', 'university', 'library', 'hospital', 'police', 'fire_station')
                        OR landuse IN ('industrial', 'commercial')
                        OR aeroway IN ('apron'))
                 ORDER BY z_order ASC, way_area DESC) AS citylike]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="parklike area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large' WHEN round(way_area * 1000000) >= 1 THEN 'medium' ELSE 'small' END) AS size
                 FROM planet_osm_polygon
                 WHERE building IS NULL
                   AND (amenity IN ('park')
                     OR landuse IN ('recreation_ground', 'greenfield', 'cemetery')
                     OR leisure IN ('park', 'pitch', 'track', 'golf_course', 'common', 'playground', 'garden', 'plaza'))
                 ORDER BY z_order ASC, way_area DESC) AS parklike]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="citylike parking area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *
                 FROM planet_osm_polygon
                 WHERE building IS NULL
                   AND amenity = 'parking'
                 ORDER BY z_order ASC, way_area DESC) AS citylike]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="forest area" srs="&osm_srs;">
      <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large' WHEN round(way_area * 1000000) >= 1 THEN 'medium' ELSE 'small' END) AS size
                 FROM planet_osm_polygon
                 WHERE "natural"='wood'
                 ORDER BY z_order ASC, way_area DESC) AS forest]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="water area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *
                 FROM planet_osm_polygon
                 WHERE landuse IN ('reservoir', 'water')
                    OR "natural" IN ('lake', 'water')
                    OR waterway IN ('canal', 'riverbank', 'river')
                 ORDER BY z_order ASC) AS water]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="water line" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE waterway IN ('river', 'stream', 'canal') ORDER BY z_order ASC) AS rivers</Parameter>
        </Datasource>
    </Layer>


    <Layer class="road texture" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('trunk', 'primary') THEN 1
                              WHEN highway = 'secondary' THEN 2
                              WHEN highway = 'tertiary' THEN 3
                              ELSE 4 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'primary', 'motorway', 'motorway_link') THEN 'major'
                              ELSE 'minor' END) AS prominence
                 FROM planet_osm_line
                 WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary', 'secondary', 'trunk', 'primary', 'motorway', 'motorway_link')
                 ORDER BY z_order ASC, priority DESC)
                 
                 AS minor_roads]]></Parameter>
        </Datasource>
    </Layer>

    <Layer class="path outline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE highway IN ('footpath', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') ORDER BY z_order ASC) AS minor_roads</Parameter>
        </Datasource>
    </Layer>
    <Layer class="road outline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('trunk', 'primary') THEN 1
                              WHEN highway = 'secondary' THEN 2
                              WHEN highway = 'tertiary' THEN 3
                              ELSE 4 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'primary', 'motorway', 'motorway_link') THEN 'major'
                              ELSE 'minor' END) AS prominence
                 FROM planet_osm_line
                 WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary', 'secondary', 'trunk', 'primary', 'motorway', 'motorway_link')
                 ORDER BY z_order ASC, priority DESC)
                 
                 AS minor_roads]]></Parameter>
        </Datasource>
    </Layer>

    <Layer class="path inline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE highway IN ('footpath', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') ORDER BY z_order ASC) AS minor_roads</Parameter>
        </Datasource>
    </Layer>
    <Layer class="road inline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('trunk', 'primary') THEN 1
                              WHEN highway = 'secondary' THEN 2
                              WHEN highway = 'tertiary' THEN 3
                              ELSE 4 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'primary', 'motorway', 'motorway_link') THEN 'major'
                              ELSE 'minor' END) AS prominence
                 FROM planet_osm_line
                 WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary', 'secondary', 'trunk', 'primary', 'motorway', 'motorway_link')
                 ORDER BY z_order ASC, priority DESC)
                 
                 AS minor_roads]]></Parameter>
        </Datasource>
    </Layer>

    <!-- motorways here are repeated, so that they may be overlaid cleanly at low zoom levels and provide a centerline at high zoom levels. -->
    <Layer class="motorway outline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE highway IN ('motorway', 'trunk')) AS motorways</Parameter>
        </Datasource>
    </Layer>
    <Layer class="motorway inline" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE highway IN ('motorway', 'trunk')) AS motorways</Parameter>
        </Datasource>
    </Layer>

    <Layer class="rail line" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') ORDER BY z_order ASC) AS railways</Parameter>
        </Datasource>
    </Layer>

    <Layer class="building area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_polygon WHERE building IS NOT NULL ORDER BY z_order ASC, way_area DESC) AS citylike</Parameter>
        </Datasource>
    </Layer>

    <!-- all labels go below -->
    <Layer class="place label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT *, COALESCE(z_order, 0) AS correct_z_order, (CASE WHEN place = 'city' THEN 0 WHEN place = 'town' THEN 1 WHEN place = 'village' THEN 2 ELSE 3 END) AS priority FROM planet_osm_point WHERE place IN ('city', 'town', 'hamlet', 'village') ORDER BY priority ASC, correct_z_order DESC) AS places</Parameter>
        </Datasource>
    </Layer>
    <Layer class="transit point" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *, y(astext(way)) AS latitude
                 FROM planet_osm_point
                 WHERE (railway IN ('station', 'subway_entrance')
                        OR aeroway IN ('aerodrome', 'airport'))
                   AND name IS NOT NULL
                 ORDER BY z_order ASC, latitude DESC) AS rail_points]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="road label major" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *, length(way) AS length, CHAR_LENGTH(ref) AS ref_length,
                        (CASE WHEN CHAR_LENGTH(ref) BETWEEN 2 AND 9 THEN ref ELSE NULL END) AS ref_content,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0 WHEN highway IN ('trunk', 'primary') THEN 1 WHEN highway = 'secondary' THEN 2 WHEN highway = 'tertiary' THEN 3 ELSE 4 END) AS priority
                 FROM planet_osm_line
                 WHERE highway IN ('secondary', 'trunk', 'primary', 'motorway', 'motorway_link')
                 ORDER BY priority ASC, z_order ASC, length DESC) AS major_roads]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="parklike label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large'
                              WHEN round(way_area * 1000000) >= 1 THEN 'medium'
                              ELSE 'small' END) AS size,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
                 FROM planet_osm_polygon
                 WHERE building IS NULL
                   AND (amenity IN ('park')
                     OR landuse IN ('recreation_ground', 'greenfield', 'cemetery')
                     OR leisure IN ('park', 'pitch', 'track', 'golf_course', 'common', 'playground', 'garden', 'plaza'))
                 ORDER BY z_order ASC, way_area DESC) AS parklike]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="citylike label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large'
                              WHEN round(way_area * 1000000) >= 1 THEN 'medium'
                              ELSE 'small' END) AS size,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
                 FROM planet_osm_polygon
                 WHERE building IS NULL
                   AND (amenity IN ('parking', 'school', 'college', 'university', 'library', 'hospital', 'police', 'fire_station')
                     OR landuse IN ('industrial', 'commercial')
                     OR aeroway IN ('apron'))
                 ORDER BY z_order ASC, way_area DESC) AS citylike]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="road label minor" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT *, length(way) AS length, (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0 WHEN highway IN ('trunk', 'primary') THEN 1 WHEN highway = 'secondary' THEN 2 WHEN highway = 'tertiary' THEN 3 ELSE 4 END) AS priority FROM planet_osm_line WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') ORDER BY priority ASC, z_order ASC, length DESC) AS minor_roads</Parameter>
        </Datasource>
    </Layer>
    <Layer class="water label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT way,name,z_order,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large'
                              WHEN round(way_area * 1000000) >= 1 THEN 'medium'
                              ELSE 'small' END) AS size,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
                 FROM planet_osm_polygon
                 WHERE landuse IN ('reservoir', 'water')
                    OR "natural" IN ('lake', 'water', 'land','bay')
		UNION (SELECT way,name,z_order, 'small' ,
REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
FROM planet_osm_point WHERE
                      "natural" IN ('lake','water','land','bay')
                       OR landuse IN ('reservoir','water') )
                 ORDER BY z_order ASC) AS water]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="building label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large'
                              WHEN round(way_area * 1000000) >= 1 THEN 'medium'
                              ELSE 'small' END) AS size,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
                 FROM planet_osm_polygon
                 WHERE building IS NOT NULL
                 ORDER BY z_order ASC, way_area DESC) AS citylike]]></Parameter>
        </Datasource>
    </Layer>
    
    <Layer class="depth label" srs="&utm17n_srs;">
      <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="table"><![CDATA[
                   (SELECT gid,the_geom ,(round(depth::numeric,2)*100)::integer/100.0 as filtered_depth  FROM chs_soundings_feet where depth < 5 )  as depth]]></Parameter>

                        
	</Datasource>
    </Layer>

 <Layer class="depth line" srs="&utm17n_srs;">
      <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
<!--	    <Parameter name="estimate_extent">&estimate_extent;</Parameter>
	    <Parameter name="extent">&extent;</Parameter> -->
            <Parameter name="table"><![CDATA[
                   (SELECT gid,the_geom  ,depth   FROM contour_filtered) as depth]]></Parameter>

                        
	</Datasource>
    </Layer>
 <Layer class="amenity name" srs="&osm_srs;">
   <Datasource>
     <Parameter name="type">postgis</Parameter>
     <Parameter name="host">&host;</Parameter>
     <Parameter name="port">&port;</Parameter>
     <Parameter name="user">&user;</Parameter>
     <Parameter name="password">&password;</Parameter>
     <Parameter name="dbname">&dbname;</Parameter>
     <Parameter name="estimate_extent">&estimate_extent;</Parameter>
     <Parameter name="extent">&extent;</Parameter>
     <Parameter name="table"><![CDATA[
                  (SELECT way,amenity,tourism,z_order,name FROM planet_osm_point where tourism is not null OR amenity is not null UNION SELECT way,amenity,tourism,z_order,name from planet_osm_polygon where tourism is not null OR amenity is not null) as amenity  ]]>
     </Parameter>
   </Datasource>
 </Layer>

<Layer class="leisure name" srs="&osm_srs;">
   <Datasource>
     <Parameter name="type">postgis</Parameter>
     <Parameter name="host">&host;</Parameter>
     <Parameter name="port">&port;</Parameter>
     <Parameter name="user">&user;</Parameter>
     <Parameter name="password">&password;</Parameter>
     <Parameter name="dbname">&dbname;</Parameter>
     <Parameter name="estimate_extent">&estimate_extent;</Parameter>
     <Parameter name="extent">&extent;</Parameter>
     <Parameter name="table"><![CDATA[
                  (SELECT way,leisure,sport,z_order,name FROM planet_osm_point where leisure is not null or sport is not null UNION SELECT way,leisure,sport,z_order,name FROM planet_osm_polygon where leisure is not null or sport is not null ) as amenity ]]>
     </Parameter>
   </Datasource>
 </Layer>

 <Layer class="wetland label" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table"><![CDATA[
                (SELECT *,
                        (CASE WHEN round(way_area * 1000000) >= 20 THEN 'large'
                              WHEN round(way_area * 1000000) >= 1 THEN 'medium'
                              ELSE 'small' END) AS size,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched
                 FROM planet_osm_polygon
                 WHERE "natural" IN ('wetland')
                 ORDER BY z_order ASC) AS wetland]]></Parameter>
        </Datasource>
    </Layer>
   <Layer class="aerialway line" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_line WHERE aerialway is not null ORDER BY z_order ASC) AS aerialway</Parameter>
        </Datasource>
    </Layer>
 <Layer class="pier area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT * FROM planet_osm_polygon WHERE "man_made"='pier' ORDER BY z_order ASC) AS pier</Parameter>
        </Datasource>
    </Layer>

 <Layer class="rock area" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">((SELECT osm_id,way,"natural" FROM planet_osm_polygon WHERE "natural" LIKE '%rock%' ORDER BY z_order ASC)  UNION (SELECT osm_id,ST_Buffer(way,0.0001) as way, "natural" FROM planet_osm_point where "natural" LIKE '%rock%'))  AS pier</Parameter>
        </Datasource>
    </Layer>

<Layer class="bouy point" srs="&osm_srs;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&host;</Parameter>
            <Parameter name="port">&port;</Parameter>
            <Parameter name="user">&user;</Parameter>
            <Parameter name="password">&password;</Parameter>
            <Parameter name="dbname">&dbname;</Parameter>
            <Parameter name="estimate_extent">&estimate_extent;</Parameter>
            <Parameter name="extent">&extent;</Parameter>
            <Parameter name="table">(SELECT osm_id,way,tags->'bouy' as bouy FROM
planet_osm_point where tags->'bouy' like 'lateral%' order by z_order) as bouy</Parameter>
        </Datasource>
    </Layer>

</Map>
